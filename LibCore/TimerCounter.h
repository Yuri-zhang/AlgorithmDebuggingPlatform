#ifndef LTimerCounter_h
#define LTimerCounter_h
#include <windows.h>
#include <string>
class TimerCounter
{
public:
	TimerCounter();

	/*****************************************************************************
	@description : 开始计时
	@param: 	
	@retrun:  
	*****************************************************************************/
	void Begin();

	/*****************************************************************************
	@description : 结束计时
	@param: 	
	@retrun:  
		已使用的时间，单位为ms
	*****************************************************************************/
	float Usage();


	/*****************************************************************************
	@description : 重新计时 
	@param: 	
	@retrun:  
	*****************************************************************************/
	void Reset();

	/*****************************************************************************
	@description : 获取当前时间
	@param: 	
	@retrun:  
		>=0 success, <0 failed
	*****************************************************************************/
	static std::string Time(bool include_tickcount=false);


	/*****************************************************************************
	@description : 获取当前时间
	@param:
	@retrun:
		>=0 success, <0 failed
	*****************************************************************************/
	static std::string Date();

	/*****************************************************************************
	@description : 获取当前时间，包含日期和时间
	@param: 	
	@retrun:  
	*****************************************************************************/
	static std::string Current(bool include_tickcount=false);
protected:
	LARGE_INTEGER begin_time_;
	LARGE_INTEGER frequnce_time_;
};


#endif

